#! /bin/sh

### BEGIN INIT INFO
# Provides:             ixbus
# Required-Start:       $remote_fs $syslog
# Required-Stop:        $remote_fs $syslog
# Default-Start:        2 3 4 5
# Default-Stop:		0 1 6
# Short-Description:    Configure iX-Bus with the ixconfig program.
### END INIT INFO

# Configure iX-Bus with the ixconfig program.
# Then load the modules that were requested by the ixconfig program.

# With the variable SOCKETCAN the used driver is selected
# SOCKETCAN="yes" the SocketCAN driver "janz_tec" and the neccessary modules are loaded
# SOCKETCAN="no"  the Janz Tec PCAN driver is loaded
#
SOCKETCAN="yes"

PATH="/sbin:/bin:/usr/sbin:/usr/bin"
IXCONFIG=/usr/janz/bin/ixconfig

KERNVER=`uname -r`
KERNVER_MAJ=`uname -r | sed -e 's/\([0-9]\.[0-9]\).*/\1/'`


do_start() {
	# Loop over every line in output of ixconfig
	echo "Configuring iX-Bus: "
	($IXCONFIG; echo) | # make sure there is a LF at the end
	while read module args
	do
		case "$module" in
			\#*|"") 
				continue ;;
			"wait-for-file") 
				# wait with increasing time
				for ws in 010 010 020 040 080 160 320 640; do
					sleep 0.${ws}
					if [ -r $args ]; then
						break
					fi
				done
				continue ;;
			"wait") 
				sleep 0.0${args}
				continue;;
		esac

		#echo "Module=$module"
		#echo "Args=$args"

		if [ $module = "pcan" ] && [ $SOCKETCAN = "yes" ]; then
			# load socketcan modules and driver
			modprobe can
			modprobe can-dev
			#modprobe can-raw
			modprobe sja1000
			modprobe sja1000_platform
			modprobe jtec_can $args
			IFS=","
			set $args
			K=$(($#-1))
			i=0
			while [ $i -lt $(($K/2)) ]
			do
			   ip link set can$i type can bitrate 1000000 triple-sampling on 
			   i=`expr $i + 1`
			done
			IFS=" "
		else
			# load janz driver
			echo -n "$module - "

			(lsmod | grep $module) >/dev/null
			if [ x$? = x0 ]; then
			    echo "already loaded."
			    continue
			fi

			modprobe $module $args

                	if [ $module = "pcan" ]; then
				IFS=","
				set $args
				K=$(($#-1))
				i=0
				while [ $i -lt $(($K/2)) ]
				do
				   mknod /dev/pcan_$i c 59 $i
				   i=`expr $i + 1`
				done
				IFS=","
				chmod 666 /dev/pcan_?
			fi
		fi
	done
	echo
}

case "$1" in
  start|"")
        do_start
        ;;
  restart|reload|force-reload)
        echo "Error: argument '$1' not supported" >&2
        exit 3
        ;;
  stop)
        # No-op
        ;;
  *)
        echo "Usage: ixbus [start|stop]" >&2
        exit 3
        ;;
esac

